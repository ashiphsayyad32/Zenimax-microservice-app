apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: microservices-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    # Enable CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    # Session affinity
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
spec:
  rules:
  - host: microservices.local
    http:
      paths:
      # Node.js API endpoints
      - path: /api/node(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: node-service
            port:
              number: 4000
      # Java API endpoints
      - path: /api/java(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: java-service
            port:
              number: 8080
      # Python API endpoints
      - path: /api/python(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: python-service
            port:
              number: 5000
      # Specific business endpoints
      - path: /api/todos(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: node-service
            port:
              number: 4000
      - path: /api/categories(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: node-service
            port:
              number: 4000
      - path: /api/tasks(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: java-service
            port:
              number: 8080
      - path: /api/users(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: python-service
            port:
              number: 5000
